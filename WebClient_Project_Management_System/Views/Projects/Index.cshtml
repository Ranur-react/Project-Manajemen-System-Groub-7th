
@{
    ViewData["Title"] = "Projects";
    Layout = "~/Views/Shared/_LayoutHomer.cshtml";
}
@section Menubar{
    @Html.Partial("_MenuBar")
}

<div class="content">
    <div class="row">
        <div class="col-md-12">
            @*            <div class="row">
                    <div class="col-lg-12">
                        <div class="hpanel">
                            <div class="panel-body">
                                <div class="input-group">
                                    <input class="form-control" type="text" placeholder="Search projects..">
                                    <div class="input-group-btn">
                                        <button class="btn btn-default"><i class="fa fa-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@
            <div class="row">
                <div class="col-lg-12 listProjects">
                    ....
                </div>
            </div>
        </div>
    </div>
</div>

<div class="ProjectContent"></div>
<div class="participantdatacontent"></div>
@section HideComponents{
    @Html.Partial("_ModalProjects")
    @Html.Partial("CRUD/ModalAdd")
    @Html.Partial("CRUD/ModalEdit")
    @Html.Partial("CRUD/ModalAddRequirement")
}
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor;
@section Scripts{
    <script>
        var datakaryawan = Object();
        $(document).ready(function () {
            reload();

        });
        const reload = () => {
                findEmployeeByParam('@HttpContextAccessor.HttpContext.Session.GetString("Username")');

            if('@User.IsInRole("IT Manager")' == 'True') {
                reloadAll();
            } else {
@*                console.log(" Assign Projects")
                console.log('@HttpContextAccessor.HttpContext.Session.GetString("Username")');*@
                findEmployeePrjectsByParam('@HttpContextAccessor.HttpContext.Session.GetString("Username")');
                //reloadAll();

            }

        }
        const reloadOwnProjects = () => {

        }

        const findEmployeePrjectsByParam = (param) => {
            var obj = Object();
            obj.Id = param;
            $.ajax({
                url: '/Employees/Find',
                type: 'POST',
                data: obj
            }).done((respond) => {
                console.log("Data karyawan yang Login")
                console.log(respond)
                if (respond.assignEmployee.length != 0) {
                    console.log("Data Projects by Id . . . .");
                    console.log(respond);
                    var data = "";

                    $.each(respond.assignEmployee, (k, v) => {
                        if (v.project.projectHistory.length != 0) {
                            let prj = v.project;
                            const max = prj.projectHistory.reduce(function (prev, current) {
                                return (prev.progress.progressStatus > current.progress.progressStatus) ? prev : current
                            })
                            @* console.log("cari data progress tertinggi")
                            console.log(max);*@
                            data += itemProject(prj.id, prj.name, prj.details, prj.assignDate, max.progress.name, "fa-level-up text-success");

                        } else {
                            data += itemProject(prj.id, prj.name, prj.details, prj.assignDate, '~', "fa-gear text-default");


                            

                        }

                    })
                    $('.listProjects').html(data);
                }
            }).fail((respond) => {
                console.log(respond)
            });
        }

        const findEmployeeByParam = (param) => {
            var obj = Object();
            obj.Id = param;
            $.ajax({
                url: '/Employees/Find',
                type: 'POST',
                data:obj
            }).done((respond) => {
                console.log("Data karyawan yang Login")
                datakaryawan.Id = respond.id;
                console.log(datakaryawan)
            }).fail((respond) => {
                console.log(respond)
            });
        }
        const reloadAll = () => {
            $.ajax({
                url: '/Projects/GetAll',
                type: 'get'

            }).done((respond) => {
                console.log("Data Projects . . . .");
                console.log(respond);
                var data = "";
              @*  var filtered = Object.filter(respond, row => row > 1);
                console.log("data projects setelah di filter");
                console.log(filtered);*@
                $.each(respond, (k, v) => {
                    if (v.projectHistory.length != 0) {
                        const max = v.projectHistory.reduce(function (prev, current) {
                            return (prev.progress.progressStatus > current.progress.progressStatus) ? prev : current
                        })
@*                        console.log("cari data progress tertinggi")
                        console.log(max);*@
                        data += itemProject(v.id, v.name, v.details, v.assignDate, max.progress.name, "fa-level-up text-success");

                    } else {
                        data += itemProject(v.id, v.name, v.details, v.assignDate, '~', "fa-gear text-default");

                    }

                })
                $('.listProjects').html(data);
            }).fail((e) => {
                console.log(e);
            });
        }

        const getProjectHistory = (idproject) => {
            let obj = Object();
            obj.Id = idproject;
            $.ajax({
                url: '/Projects/GetById',
                type: 'post',
                data:obj
            }).done((respond) => {
                console.log("Project History yang didapatkan");
                console.log(respond);
                if (respond.projectHistory.length !== 0) {
                    tampilkanTimeLineData(respond.projectHistory);
                    $('.timelineBLockPanle').removeClass('hide');
                } else {
                    $('.timelineBLockPanle').addClass('hide');

                }

            }).fail((e) => {
                console.log(e);
            });
        }
        const tampilkanTimeLineData = (dataHistory) => {
            var data = "";
            $.each(dataHistory, (k, v) => {

                data += itemProgress(v.progress.name, v.progress.progresDetails, v.progress.employee.firstName, v.progress.dateEntry, v.progress.colorCode, progressActionsbyStatus(v.progress.progressStatus, v.idProject))
            })
            $('.contentTimeLineProject').html(data);
        }

        const addProgress = (idprj,status,name) => {
            var obj = new Object();
            console.log("Data karyawan yang Login")
            console.log(datakaryawan.Id);
             
            obj.id = idprj;
            obj.Name = name;
            obj.ProgresDetails = name+" Was Entry";
            obj.Approver = datakaryawan.Id;
            obj.ProgressStatus = status;
            obj.ColorCode = "#34495E";
            obj.Success = name+" Entried";
            requestrequirement2(obj);
        }

        const progressActionsbyStatus = (progressStatus,idprj) => {

            switch (progressStatus) {
                case 1:
                         if ('@User.IsInRole("Business Analyses")' =='True')
                {

                    return `<button class="btn btn-success  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Requirement')"><i class="fa fa-paperclip"></i>Add Requirement</button>`;

                    }
                    return '';
                    break;
                case 2:
                           if ('@User.IsInRole("Business Analyses")' =='True')
                            {
                               return `<button class="btn btn-info  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Business Design')"><i class="fa fa-paperclip"></i>Add Business Design</button>`;
                    }
                    return '';

                    break;
                case 3:
                       if ('@User.IsInRole("System Analyses")' =='True')
                       {
                           return `<button class="btn btn-info  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Design System')"><i class="fa fa-paperclip"></i>Add Design Systemn</button>`;

                        }
                    return '';

                    break;
                case 4:
                    if ('@User.IsInRole("System Analyses")' == 'True') {
                        return `<button class="btn btn-info  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Database Design')"><i class="fa fa-paperclip"></i>Add Database Design</button>`;
                    }
                    return '';

                    break;
                case 5:
                    if ('@User.IsInRole("System Analyses")' == 'True') {

                        return `<button class="btn btn-info  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Ux/Ui Design')"><i class="fa fa-paperclip"></i>Add Ux/Ui Design</button>`;
                    }
                    return '';
                    //return 'UxUiDesign Button'
                    break;
                case 6:
                    if ('@User.IsInRole("Developer")' == 'True') {

                        return `<button class="btn btn-danger  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Developing')"><i class="fa fa-paperclip"></i>Add Developing</button>`;
                    }
                    return '';
                    //return 'Developing Button'
                    break;
                case 7:
                    if ('@User.IsInRole("Quallity Assurance")' == 'True') {

                        return `<button class="btn btn-warning  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Testing Progress')"><i class="fa fa-paperclip"></i>Add Testing Progress</button>`;
                    }
                    return '';
                    //return 'Testing Button'
                    break;
                case 8:
                    if ('@User.IsInRole("DevOps")' == 'True') {
                        return `<button class="btn btn-warning2  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Deploying Progress')"><i class="fa fa-paperclip"></i>Add Deploying Progress</button>`;
                    }
                    return '';
                   // return 'Deploying Button'
                    break;
                case 9:
                    if ('@User.IsInRole("IT Manager")' == 'True') {
                        return `<button class="btn btn-default  btn-xs"   onClick="addProgress('${idprj}',${progressStatus},'Done')"><i class="fa fa-paperclip"></i>Project Clear</button>`;
                    }
                        return ''
                    break;
                default:
                    return 'Finally'
                    break;
            }
        }
        const itemProject = (id,title, texts, lastDateHistry, statusTask, IconTask) => {

            return `<div class="hpanel filter-item">
                                    <a href="#" class="itemProject" onClick="itemProjectClick('${id}')">
                                        <div class="panel-body">
                                            <div class="pull-right text-right">
                                                <small class="stat-label"> ${lastDateHistry}</small>
                                                <h4>${statusTask} <i class="fa ${IconTask}"></i></h4>
                                            </div>
                                            <h4 class="m-b-xs">${title}</h4>
                                            <p class="small">${texts.slice(0, 100)} . . .</p>
                                        </div>
                                    </a>
                                </div>`;
        }

        const itemProgress = (name, detail,approver, dateentry,color,action) => {
            return `<div class="vertical-timeline-block">
                                                <div class="vertical-timeline-icon navy-bg">
                                                    <i style="color:${color}" class="fa fa-calendar"></i>
                                                </div>
                                                <div class="vertical-timeline-content">
                                                    <div class="p-sm">
                                                        <span class="vertical-date pull-right"> Actions by ${approver} <br /> <small>${dateentry}</small> </span>

                                                        <h2>${name}</h2>
                                                        <p>
                                                           ${detail}
                                                        </p>
                                                    </div>
                                                    <div class="panel-footer">
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                   ${action}
                                                            </div>
                                                        </div>

                                                    </div>
                                                </div>
                                            </div>`
        }

       const itemProjectClick = (data) => {
            console.log("Objek data saat di klik")
            console.log(data)
            $.ajax({
                url: '/Projects/ProjectDetails',
                type: 'get',
                data: { id: data}

            }).done((respond) => {
                $(".ProjectContent").html(respond);
                $('#ProjectModal').modal('show');
            }).fail((respond) => {
                console.log(respond)
            });
             @* $.get('@Url.Action("ModalProjects", "Projects")', {id : 1}, function(content){
                    $(".ProjectContent").html(content);
                    });*@
        }
        const requestrequirement = (id) => {
            var obj = new Object();
            obj.id = id;
            obj.Name = "Request";
            obj.ProgresDetails = "Request Requirement";
            obj.Approver = datakaryawan.Id;
            obj.ColorCode = "#34495E";
            obj.ProgressStatus = 0;
            obj.Success = "Project started and will be request Requirement";
            requestrequirement2(obj);
        }
        const requestrequirement2 = (data) => {
            var obj = Object();
            obj.IdProject = data.id;
            obj.Name = data.Name;
            obj.ProgresDetails = data.ProgresDetails;
            obj.Approver = data.Approver;
            obj.ColorCode = data.ColorCode;
            obj.ProgressStatus = data.ProgressStatus;
            console.log("Data requrement yang dikirmakn by parametr");
            console.log(obj);

            $.ajax({
                url: '/progresses/add',
                type: 'POST',
                data: obj

            }).done((respond) => {
                reload();
                poUPAlertSweet("success", data.Success, "", "center");
                console.log("Respond yang didapatkan");
                $('#ProjectModal').modal('hide');
                itemProjectClick(data.id)
                console.log(respond);


            }).fail((e) => {
                console.log(e);
            });
        }
        const requestrequirementOld = (id) => {
                        var obj = Object();
                        obj.IdProject = id;
                        obj.Name = "Request";
            obj.ProgresDetails = "Request Requirement";
            obj.Approver = "11445";
                        obj.ColorCode = "#34495E";
                        console.log("Data requrement yang dikirmakn");
                        console.log(obj);

                        $.ajax({
                            url: '/progresses/add',
                            type: 'POST',
                            data: obj

                        }).done((respond) => {
                            reload();
                            poUPAlertSweet("success", "Project started and will be request Requirement", "", "center");
                            console.log("Respond yang didapatkan");

                            console.log(respond);


                        }).fail((e) => {
                            console.log(e);
                        });
                    }
        const openmodaledit = (Id) => {
            $('#EditProjectModal').modal('show');
            $('#ProjectModal').modal('hide');

             var obj = new Object();
        obj.Id = Id;
        console.log(obj);
            $.ajax({
                url: '/Projects/GetById',
                type: 'POST',
                data: obj

            }).done((respond) => {
                console.log(respond);
                $('#Id-Edit').val(respond.id);
                $('#Name-Edit').val(respond.name);
                $('#Details-Edit').val(respond.details);
                $('#AssignDate-Edit').val(new Date(respond.assignDate).toISOString().substring(0, 10));
                $('#EndDate-Edit').val(new Date(respond.endDate).toISOString().substring(0, 10));
            }).fail((e) => {
                console.log(e);
            });
        }
        const ParticipantdataCall = (id) => {
            console.log("Objek Employee data saat di klik")
            console.log(id)
            var ob = Object();
            ob.Id = id;
            $.ajax({
                url: '/Employees/EmployeeListAdd',
                type: 'post',
                data: ob

            }).done((respond) => {
                $(".participantdatacontent").html(respond);
                $('#ProjectModal').modal('hide');
                $('#AddParticipantModal').modal('show');


            }).fail((respond) => {
                console.log(respond)
            });
        }
        const AsigntoProjects = (prjID,id) => {
            console.log("id project assign");
            console.log(prjID);
            console.log(id);
            var obj = Object();
            obj.IdProject = prjID;
            obj.Status_Assign = 6;
            obj.IdEmployee = id;
            obj.Position = "Member Teams";
            console.log("Data Assign yang dikirmakn");
            console.log(obj);
            $.ajax({
                url: '/AssignEmployees/post',
                type: 'POST',
                data: obj
            }).done((respond) => {
              //  poUPAlertSweet("success", "Employees has Assign , please reload Pages", "", "center");
                console.log("Respond yang didapatkan");
                console.log(respond);
                $('#AddParticipantModal').modal('hide');
                itemProjectClick(prjID)
            }).fail((e) => {
                console.log(e);
            });
        }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.min.js"></script>

    <script>
        $("#idformproject").submit(function (e) {
            e.preventDefault(); // avoid to execute the actual submit of the form.
            var form = $(this);
            var actionUrl = form.attr('action');
            $.ajax({
                type: "POST",
                url: actionUrl,
                data: form.serialize(), // serializes the form's elements.
                success: function (data) {
                    console.log(data);
                    switch (data) {
                        case 1:
                            poUPAlertSweet("success", "Tambah Project Berhasil", "", "center");
                            //window.location.href="/Login"
                            break;
                        case 200:
                            poUPAlertSweet("success", "Tambah Project Berhasil", "", "center");
                            //window.location.href="/Login"
                            reload();
                            $('#AddProjectModal').modal('hide');
                            break;
                        default:
                            poUPAlertSweet("error", "Tambah Project Gagal", JSON.stringify(data), "center");
                            break;
                    }
                }
            });
        });
    </script>

    <script>
        const edit = () => {

            var form = $("#idformprojectupdate");
            console.log($('#Id-Edit').val())
            var actionUrl = "/projects/put";
            $.ajax({
                type: "PUT",
                url: actionUrl,
                data: form.serialize(), // serializes the form's elements.
                success: function (data) {
                    console.log(data);
                    switch (data) {
                        case 200:
                            poUPAlertSweet("success", "Edit Project Berhasil", "", "center");
                            reload();
                            $('#EditProjectModal').modal('hide');
                            itemProjectClick($('#Id-Edit').val())
                            break;
                        default:
                            poUPAlertSweet("error", "Edit Project Gagal", JSON.stringify(data), "center");
                            break;
                    }
                }
            });
        }
    </script>




}
